//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace FacturaElectronica.Service.Engine.FEPrint {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FEPrintServiceSoap", Namespace="http://accendo.com.ar/")]
    public partial class FEPrintService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PrintCbteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToFileSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCbteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FEPrintService() {
            this.Url = global::FacturaElectronica.Service.Engine.Properties.Settings.Default.FacturaElectronica_Service_Engine_FEPrint_FEPrintService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PrintCbteCompletedEventHandler PrintCbteCompleted;
        
        /// <remarks/>
        public event SendToFileSystemCompletedEventHandler SendToFileSystemCompleted;
        
        /// <remarks/>
        public event GetCbteCompletedEventHandler GetCbteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/PrintCbte", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PrintCbte(string EmpresaID, string idsComprobantes, string FilePath) {
            object[] results = this.Invoke("PrintCbte", new object[] {
                        EmpresaID,
                        idsComprobantes,
                        FilePath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintCbteAsync(string EmpresaID, string idsComprobantes, string FilePath) {
            this.PrintCbteAsync(EmpresaID, idsComprobantes, FilePath, null);
        }
        
        /// <remarks/>
        public void PrintCbteAsync(string EmpresaID, string idsComprobantes, string FilePath, object userState) {
            if ((this.PrintCbteOperationCompleted == null)) {
                this.PrintCbteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintCbteOperationCompleted);
            }
            this.InvokeAsync("PrintCbte", new object[] {
                        EmpresaID,
                        idsComprobantes,
                        FilePath}, this.PrintCbteOperationCompleted, userState);
        }
        
        private void OnPrintCbteOperationCompleted(object arg) {
            if ((this.PrintCbteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintCbteCompleted(this, new PrintCbteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/SendToFileSystem", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendToFileSystem(string EmpresaID, string idsComprobantes, string CopiaComprobante) {
            object[] results = this.Invoke("SendToFileSystem", new object[] {
                        EmpresaID,
                        idsComprobantes,
                        CopiaComprobante});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendToFileSystemAsync(string EmpresaID, string idsComprobantes, string CopiaComprobante) {
            this.SendToFileSystemAsync(EmpresaID, idsComprobantes, CopiaComprobante, null);
        }
        
        /// <remarks/>
        public void SendToFileSystemAsync(string EmpresaID, string idsComprobantes, string CopiaComprobante, object userState) {
            if ((this.SendToFileSystemOperationCompleted == null)) {
                this.SendToFileSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToFileSystemOperationCompleted);
            }
            this.InvokeAsync("SendToFileSystem", new object[] {
                        EmpresaID,
                        idsComprobantes,
                        CopiaComprobante}, this.SendToFileSystemOperationCompleted, userState);
        }
        
        private void OnSendToFileSystemOperationCompleted(object arg) {
            if ((this.SendToFileSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToFileSystemCompleted(this, new SendToFileSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/GetCbte", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCbte(string empresaID, string idCbte, TipoDeCopia eCopia) {
            object[] results = this.Invoke("GetCbte", new object[] {
                        empresaID,
                        idCbte,
                        eCopia});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCbteAsync(string empresaID, string idCbte, TipoDeCopia eCopia) {
            this.GetCbteAsync(empresaID, idCbte, eCopia, null);
        }
        
        /// <remarks/>
        public void GetCbteAsync(string empresaID, string idCbte, TipoDeCopia eCopia, object userState) {
            if ((this.GetCbteOperationCompleted == null)) {
                this.GetCbteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCbteOperationCompleted);
            }
            this.InvokeAsync("GetCbte", new object[] {
                        empresaID,
                        idCbte,
                        eCopia}, this.GetCbteOperationCompleted, userState);
        }
        
        private void OnGetCbteOperationCompleted(object arg) {
            if ((this.GetCbteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCbteCompleted(this, new GetCbteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public enum TipoDeCopia {
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Duplicado,
        
        /// <remarks/>
        Triplicado,
        
        /// <remarks/>
        Copia,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrintCbteCompletedEventHandler(object sender, PrintCbteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintCbteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintCbteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendToFileSystemCompletedEventHandler(object sender, SendToFileSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToFileSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToFileSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCbteCompletedEventHandler(object sender, GetCbteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCbteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCbteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591