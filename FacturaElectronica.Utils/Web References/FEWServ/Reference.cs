//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace FacturaElectronica.Utils.FEWServ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FEServicesSoap", Namespace="http://accendo.com.ar/")]
    public partial class FEServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestProcesarLoteFacturasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcesarLoteFacturasBienesServiciosObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcesarLoteFacturasExportacionObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcesarLoteFacturasBienesServiciosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcesarLoteFacturasExportacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcesarLoteFacturasBienesCapitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReprocesarLoteFacturasBienesServiciosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReprocesarLoteFacturasExportacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReprocesarLoteFacturasBienesCapitalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FEServices() {
            this.Url = global::FacturaElectronica.Utils.Properties.Settings.Default.FacturaElectronica_Utils_FEWServ_FEServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestProcesarLoteFacturasCompletedEventHandler TestProcesarLoteFacturasCompleted;
        
        /// <remarks/>
        public event ProcesarLoteFacturasBienesServiciosObjCompletedEventHandler ProcesarLoteFacturasBienesServiciosObjCompleted;
        
        /// <remarks/>
        public event ProcesarLoteFacturasExportacionObjCompletedEventHandler ProcesarLoteFacturasExportacionObjCompleted;
        
        /// <remarks/>
        public event ProcesarLoteFacturasBienesServiciosCompletedEventHandler ProcesarLoteFacturasBienesServiciosCompleted;
        
        /// <remarks/>
        public event ProcesarLoteFacturasExportacionCompletedEventHandler ProcesarLoteFacturasExportacionCompleted;
        
        /// <remarks/>
        public event ProcesarLoteFacturasBienesCapitalCompletedEventHandler ProcesarLoteFacturasBienesCapitalCompleted;
        
        /// <remarks/>
        public event ReprocesarLoteFacturasBienesServiciosCompletedEventHandler ReprocesarLoteFacturasBienesServiciosCompleted;
        
        /// <remarks/>
        public event ReprocesarLoteFacturasExportacionCompletedEventHandler ReprocesarLoteFacturasExportacionCompleted;
        
        /// <remarks/>
        public event ReprocesarLoteFacturasBienesCapitalCompletedEventHandler ReprocesarLoteFacturasBienesCapitalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/TestProcesarLoteFacturas", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestProcesarLoteFacturas(string EmpresaID, string TipoServicio, string PathXmlDocumentBatch) {
            object[] results = this.Invoke("TestProcesarLoteFacturas", new object[] {
                        EmpresaID,
                        TipoServicio,
                        PathXmlDocumentBatch});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestProcesarLoteFacturasAsync(string EmpresaID, string TipoServicio, string PathXmlDocumentBatch) {
            this.TestProcesarLoteFacturasAsync(EmpresaID, TipoServicio, PathXmlDocumentBatch, null);
        }
        
        /// <remarks/>
        public void TestProcesarLoteFacturasAsync(string EmpresaID, string TipoServicio, string PathXmlDocumentBatch, object userState) {
            if ((this.TestProcesarLoteFacturasOperationCompleted == null)) {
                this.TestProcesarLoteFacturasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestProcesarLoteFacturasOperationCompleted);
            }
            this.InvokeAsync("TestProcesarLoteFacturas", new object[] {
                        EmpresaID,
                        TipoServicio,
                        PathXmlDocumentBatch}, this.TestProcesarLoteFacturasOperationCompleted, userState);
        }
        
        private void OnTestProcesarLoteFacturasOperationCompleted(object arg) {
            if ((this.TestProcesarLoteFacturasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestProcesarLoteFacturasCompleted(this, new TestProcesarLoteFacturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ProcesarLoteFacturasBienesServiciosObj", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseBatch ProcesarLoteFacturasBienesServiciosObj(string EmpresaID, RequestBatch documentBatch) {
            object[] results = this.Invoke("ProcesarLoteFacturasBienesServiciosObj", new object[] {
                        EmpresaID,
                        documentBatch});
            return ((ResponseBatch)(results[0]));
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesServiciosObjAsync(string EmpresaID, RequestBatch documentBatch) {
            this.ProcesarLoteFacturasBienesServiciosObjAsync(EmpresaID, documentBatch, null);
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesServiciosObjAsync(string EmpresaID, RequestBatch documentBatch, object userState) {
            if ((this.ProcesarLoteFacturasBienesServiciosObjOperationCompleted == null)) {
                this.ProcesarLoteFacturasBienesServiciosObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcesarLoteFacturasBienesServiciosObjOperationCompleted);
            }
            this.InvokeAsync("ProcesarLoteFacturasBienesServiciosObj", new object[] {
                        EmpresaID,
                        documentBatch}, this.ProcesarLoteFacturasBienesServiciosObjOperationCompleted, userState);
        }
        
        private void OnProcesarLoteFacturasBienesServiciosObjOperationCompleted(object arg) {
            if ((this.ProcesarLoteFacturasBienesServiciosObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcesarLoteFacturasBienesServiciosObjCompleted(this, new ProcesarLoteFacturasBienesServiciosObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ProcesarLoteFacturasExportacionObj", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseBatch ProcesarLoteFacturasExportacionObj(string EmpresaID, RequestBatch documentBatch) {
            object[] results = this.Invoke("ProcesarLoteFacturasExportacionObj", new object[] {
                        EmpresaID,
                        documentBatch});
            return ((ResponseBatch)(results[0]));
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasExportacionObjAsync(string EmpresaID, RequestBatch documentBatch) {
            this.ProcesarLoteFacturasExportacionObjAsync(EmpresaID, documentBatch, null);
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasExportacionObjAsync(string EmpresaID, RequestBatch documentBatch, object userState) {
            if ((this.ProcesarLoteFacturasExportacionObjOperationCompleted == null)) {
                this.ProcesarLoteFacturasExportacionObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcesarLoteFacturasExportacionObjOperationCompleted);
            }
            this.InvokeAsync("ProcesarLoteFacturasExportacionObj", new object[] {
                        EmpresaID,
                        documentBatch}, this.ProcesarLoteFacturasExportacionObjOperationCompleted, userState);
        }
        
        private void OnProcesarLoteFacturasExportacionObjOperationCompleted(object arg) {
            if ((this.ProcesarLoteFacturasExportacionObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcesarLoteFacturasExportacionObjCompleted(this, new ProcesarLoteFacturasExportacionObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ProcesarLoteFacturasBienesServicios", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcesarLoteFacturasBienesServicios(string EmpresaID, string xmlDocument) {
            object[] results = this.Invoke("ProcesarLoteFacturasBienesServicios", new object[] {
                        EmpresaID,
                        xmlDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesServiciosAsync(string EmpresaID, string xmlDocument) {
            this.ProcesarLoteFacturasBienesServiciosAsync(EmpresaID, xmlDocument, null);
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesServiciosAsync(string EmpresaID, string xmlDocument, object userState) {
            if ((this.ProcesarLoteFacturasBienesServiciosOperationCompleted == null)) {
                this.ProcesarLoteFacturasBienesServiciosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcesarLoteFacturasBienesServiciosOperationCompleted);
            }
            this.InvokeAsync("ProcesarLoteFacturasBienesServicios", new object[] {
                        EmpresaID,
                        xmlDocument}, this.ProcesarLoteFacturasBienesServiciosOperationCompleted, userState);
        }
        
        private void OnProcesarLoteFacturasBienesServiciosOperationCompleted(object arg) {
            if ((this.ProcesarLoteFacturasBienesServiciosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcesarLoteFacturasBienesServiciosCompleted(this, new ProcesarLoteFacturasBienesServiciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ProcesarLoteFacturasExportacion", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcesarLoteFacturasExportacion(string EmpresaID, string xmlDocument) {
            object[] results = this.Invoke("ProcesarLoteFacturasExportacion", new object[] {
                        EmpresaID,
                        xmlDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasExportacionAsync(string EmpresaID, string xmlDocument) {
            this.ProcesarLoteFacturasExportacionAsync(EmpresaID, xmlDocument, null);
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasExportacionAsync(string EmpresaID, string xmlDocument, object userState) {
            if ((this.ProcesarLoteFacturasExportacionOperationCompleted == null)) {
                this.ProcesarLoteFacturasExportacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcesarLoteFacturasExportacionOperationCompleted);
            }
            this.InvokeAsync("ProcesarLoteFacturasExportacion", new object[] {
                        EmpresaID,
                        xmlDocument}, this.ProcesarLoteFacturasExportacionOperationCompleted, userState);
        }
        
        private void OnProcesarLoteFacturasExportacionOperationCompleted(object arg) {
            if ((this.ProcesarLoteFacturasExportacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcesarLoteFacturasExportacionCompleted(this, new ProcesarLoteFacturasExportacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ProcesarLoteFacturasBienesCapital", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcesarLoteFacturasBienesCapital(string EmpresaID, string xmlDocument) {
            object[] results = this.Invoke("ProcesarLoteFacturasBienesCapital", new object[] {
                        EmpresaID,
                        xmlDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesCapitalAsync(string EmpresaID, string xmlDocument) {
            this.ProcesarLoteFacturasBienesCapitalAsync(EmpresaID, xmlDocument, null);
        }
        
        /// <remarks/>
        public void ProcesarLoteFacturasBienesCapitalAsync(string EmpresaID, string xmlDocument, object userState) {
            if ((this.ProcesarLoteFacturasBienesCapitalOperationCompleted == null)) {
                this.ProcesarLoteFacturasBienesCapitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcesarLoteFacturasBienesCapitalOperationCompleted);
            }
            this.InvokeAsync("ProcesarLoteFacturasBienesCapital", new object[] {
                        EmpresaID,
                        xmlDocument}, this.ProcesarLoteFacturasBienesCapitalOperationCompleted, userState);
        }
        
        private void OnProcesarLoteFacturasBienesCapitalOperationCompleted(object arg) {
            if ((this.ProcesarLoteFacturasBienesCapitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcesarLoteFacturasBienesCapitalCompleted(this, new ProcesarLoteFacturasBienesCapitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ReprocesarLoteFacturasBienesServicios", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReprocesarLoteFacturasBienesServicios(string EmpresaID, RequestBatch documentBatch) {
            object[] results = this.Invoke("ReprocesarLoteFacturasBienesServicios", new object[] {
                        EmpresaID,
                        documentBatch});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasBienesServiciosAsync(string EmpresaID, RequestBatch documentBatch) {
            this.ReprocesarLoteFacturasBienesServiciosAsync(EmpresaID, documentBatch, null);
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasBienesServiciosAsync(string EmpresaID, RequestBatch documentBatch, object userState) {
            if ((this.ReprocesarLoteFacturasBienesServiciosOperationCompleted == null)) {
                this.ReprocesarLoteFacturasBienesServiciosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReprocesarLoteFacturasBienesServiciosOperationCompleted);
            }
            this.InvokeAsync("ReprocesarLoteFacturasBienesServicios", new object[] {
                        EmpresaID,
                        documentBatch}, this.ReprocesarLoteFacturasBienesServiciosOperationCompleted, userState);
        }
        
        private void OnReprocesarLoteFacturasBienesServiciosOperationCompleted(object arg) {
            if ((this.ReprocesarLoteFacturasBienesServiciosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReprocesarLoteFacturasBienesServiciosCompleted(this, new ReprocesarLoteFacturasBienesServiciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ReprocesarLoteFacturasExportacion", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReprocesarLoteFacturasExportacion(string EmpresaID, RequestBatch documentBatch) {
            object[] results = this.Invoke("ReprocesarLoteFacturasExportacion", new object[] {
                        EmpresaID,
                        documentBatch});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasExportacionAsync(string EmpresaID, RequestBatch documentBatch) {
            this.ReprocesarLoteFacturasExportacionAsync(EmpresaID, documentBatch, null);
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasExportacionAsync(string EmpresaID, RequestBatch documentBatch, object userState) {
            if ((this.ReprocesarLoteFacturasExportacionOperationCompleted == null)) {
                this.ReprocesarLoteFacturasExportacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReprocesarLoteFacturasExportacionOperationCompleted);
            }
            this.InvokeAsync("ReprocesarLoteFacturasExportacion", new object[] {
                        EmpresaID,
                        documentBatch}, this.ReprocesarLoteFacturasExportacionOperationCompleted, userState);
        }
        
        private void OnReprocesarLoteFacturasExportacionOperationCompleted(object arg) {
            if ((this.ReprocesarLoteFacturasExportacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReprocesarLoteFacturasExportacionCompleted(this, new ReprocesarLoteFacturasExportacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://accendo.com.ar/ReprocesarLoteFacturasBienesCapital", RequestNamespace="http://accendo.com.ar/", ResponseNamespace="http://accendo.com.ar/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReprocesarLoteFacturasBienesCapital(string EmpresaID, RequestBatch documentBatch) {
            object[] results = this.Invoke("ReprocesarLoteFacturasBienesCapital", new object[] {
                        EmpresaID,
                        documentBatch});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasBienesCapitalAsync(string EmpresaID, RequestBatch documentBatch) {
            this.ReprocesarLoteFacturasBienesCapitalAsync(EmpresaID, documentBatch, null);
        }
        
        /// <remarks/>
        public void ReprocesarLoteFacturasBienesCapitalAsync(string EmpresaID, RequestBatch documentBatch, object userState) {
            if ((this.ReprocesarLoteFacturasBienesCapitalOperationCompleted == null)) {
                this.ReprocesarLoteFacturasBienesCapitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReprocesarLoteFacturasBienesCapitalOperationCompleted);
            }
            this.InvokeAsync("ReprocesarLoteFacturasBienesCapital", new object[] {
                        EmpresaID,
                        documentBatch}, this.ReprocesarLoteFacturasBienesCapitalOperationCompleted, userState);
        }
        
        private void OnReprocesarLoteFacturasBienesCapitalOperationCompleted(object arg) {
            if ((this.ReprocesarLoteFacturasBienesCapitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReprocesarLoteFacturasBienesCapitalCompleted(this, new ReprocesarLoteFacturasBienesCapitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class RequestBatch {
        
        private string batchUniqueIdField;
        
        private string sonServiciosField;
        
        private string periodoField;
        
        private string cantidadComprobantesField;
        
        private string cUITInformanteField;
        
        private string totalField;
        
        private string totalComprobanteBField;
        
        private string totalNoGravadoField;
        
        private string totalGravadoField;
        
        private string totalImpuestoLiquidadoField;
        
        private string totalRNI_PercepcionField;
        
        private string totalExentoField;
        
        private string totalPercepciones_PagosCuentaImpuestosNacionalesField;
        
        private string totalPercepcionIIBBField;
        
        private string totalPercepcionImpuestosMunicipalesField;
        
        private string totalImpuestosInternosField;
        
        private string totalMonedaFacturacionField;
        
        private string totalMonedaFacturacionComprobanteBField;
        
        private string totalNoGravadoMonedaFacturacionField;
        
        private string totalGravadoMonedaFacturacionField;
        
        private string totalImpuestoLiquidadoMonedaFacturacionField;
        
        private string totalRNI_PercepcionMonedaFacturacionField;
        
        private string totalExentoMonedaFacturacionField;
        
        private string totalPercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField;
        
        private string totalPercepcionIIBBMonedaFacturacionField;
        
        private string totalPercepcionImpuestosMunicipalesMonedaFacturacionField;
        
        private string totalImpuestosInternosMonedaFacturacionField;
        
        private RequestHeader[] requestHeadersField;
        
        /// <remarks/>
        public string BatchUniqueId {
            get {
                return this.batchUniqueIdField;
            }
            set {
                this.batchUniqueIdField = value;
            }
        }
        
        /// <remarks/>
        public string SonServicios {
            get {
                return this.sonServiciosField;
            }
            set {
                this.sonServiciosField = value;
            }
        }
        
        /// <remarks/>
        public string Periodo {
            get {
                return this.periodoField;
            }
            set {
                this.periodoField = value;
            }
        }
        
        /// <remarks/>
        public string CantidadComprobantes {
            get {
                return this.cantidadComprobantesField;
            }
            set {
                this.cantidadComprobantesField = value;
            }
        }
        
        /// <remarks/>
        public string CUITInformante {
            get {
                return this.cUITInformanteField;
            }
            set {
                this.cUITInformanteField = value;
            }
        }
        
        /// <remarks/>
        public string Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string TotalComprobanteB {
            get {
                return this.totalComprobanteBField;
            }
            set {
                this.totalComprobanteBField = value;
            }
        }
        
        /// <remarks/>
        public string TotalNoGravado {
            get {
                return this.totalNoGravadoField;
            }
            set {
                this.totalNoGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string TotalGravado {
            get {
                return this.totalGravadoField;
            }
            set {
                this.totalGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string TotalImpuestoLiquidado {
            get {
                return this.totalImpuestoLiquidadoField;
            }
            set {
                this.totalImpuestoLiquidadoField = value;
            }
        }
        
        /// <remarks/>
        public string TotalRNI_Percepcion {
            get {
                return this.totalRNI_PercepcionField;
            }
            set {
                this.totalRNI_PercepcionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalExento {
            get {
                return this.totalExentoField;
            }
            set {
                this.totalExentoField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepciones_PagosCuentaImpuestosNacionales {
            get {
                return this.totalPercepciones_PagosCuentaImpuestosNacionalesField;
            }
            set {
                this.totalPercepciones_PagosCuentaImpuestosNacionalesField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepcionIIBB {
            get {
                return this.totalPercepcionIIBBField;
            }
            set {
                this.totalPercepcionIIBBField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepcionImpuestosMunicipales {
            get {
                return this.totalPercepcionImpuestosMunicipalesField;
            }
            set {
                this.totalPercepcionImpuestosMunicipalesField = value;
            }
        }
        
        /// <remarks/>
        public string TotalImpuestosInternos {
            get {
                return this.totalImpuestosInternosField;
            }
            set {
                this.totalImpuestosInternosField = value;
            }
        }
        
        /// <remarks/>
        public string TotalMonedaFacturacion {
            get {
                return this.totalMonedaFacturacionField;
            }
            set {
                this.totalMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalMonedaFacturacionComprobanteB {
            get {
                return this.totalMonedaFacturacionComprobanteBField;
            }
            set {
                this.totalMonedaFacturacionComprobanteBField = value;
            }
        }
        
        /// <remarks/>
        public string TotalNoGravadoMonedaFacturacion {
            get {
                return this.totalNoGravadoMonedaFacturacionField;
            }
            set {
                this.totalNoGravadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalGravadoMonedaFacturacion {
            get {
                return this.totalGravadoMonedaFacturacionField;
            }
            set {
                this.totalGravadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalImpuestoLiquidadoMonedaFacturacion {
            get {
                return this.totalImpuestoLiquidadoMonedaFacturacionField;
            }
            set {
                this.totalImpuestoLiquidadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalRNI_PercepcionMonedaFacturacion {
            get {
                return this.totalRNI_PercepcionMonedaFacturacionField;
            }
            set {
                this.totalRNI_PercepcionMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalExentoMonedaFacturacion {
            get {
                return this.totalExentoMonedaFacturacionField;
            }
            set {
                this.totalExentoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacion {
            get {
                return this.totalPercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField;
            }
            set {
                this.totalPercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepcionIIBBMonedaFacturacion {
            get {
                return this.totalPercepcionIIBBMonedaFacturacionField;
            }
            set {
                this.totalPercepcionIIBBMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPercepcionImpuestosMunicipalesMonedaFacturacion {
            get {
                return this.totalPercepcionImpuestosMunicipalesMonedaFacturacionField;
            }
            set {
                this.totalPercepcionImpuestosMunicipalesMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string TotalImpuestosInternosMonedaFacturacion {
            get {
                return this.totalImpuestosInternosMonedaFacturacionField;
            }
            set {
                this.totalImpuestosInternosMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public RequestHeader[] RequestHeaders {
            get {
                return this.requestHeadersField;
            }
            set {
                this.requestHeadersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class RequestHeader {
        
        private string sQLIDField;
        
        private string empresaIDField;
        
        private string tipoTransaccionField;
        
        private string fechaComprobanteField;
        
        private string fechaDesdeServicioFacturadoField;
        
        private string fechaHastaServicioFacturadoField;
        
        private string tipoComprobanteField;
        
        private string nroComprobanteDesdeField;
        
        private string nroComprobanteHastaField;
        
        private string fechaVencimientoPagoField;
        
        private string importeField;
        
        private string importeComprobanteBField;
        
        private string importeNoGravadoField;
        
        private string importeGravadoField;
        
        private string importeImpuestoLiquidadoField;
        
        private string importeRNI_PercepcionField;
        
        private string importeExentoField;
        
        private string importePercepciones_PagosCuentaImpuestosNacionalesField;
        
        private string importePercepcionIIBBField;
        
        private string importePercepcionImpuestosMunicipalesField;
        
        private string importeImpuestosInternosField;
        
        private string cantidadAlicuotasIVAField;
        
        private string codigoOperacionField;
        
        private string letraComprobanteField;
        
        private string nroInternoERPField;
        
        private string condicionPagoField;
        
        private string oficinaVentasField;
        
        private string puntoVentaField;
        
        private string emisorRazonSocialField;
        
        private string emisorDireccionField;
        
        private string emisorCalleField;
        
        private string emisorCPField;
        
        private string emisorLocalidadField;
        
        private string emisorProvinciaField;
        
        private string emisorPaisField;
        
        private string emisorTelefonosField;
        
        private string emisorEMailField;
        
        private string compradorCodigoDocumentoField;
        
        private string compradorNroDocumentoField;
        
        private string compradorRazonSocialField;
        
        private string compradorTipoResponsableField;
        
        private string compradorTipoResponsableDescripcionField;
        
        private string compradorDireccionField;
        
        private string compradorLocalidadField;
        
        private string compradorProvinciaField;
        
        private string compradorPaisField;
        
        private string compradorCodigoPostalField;
        
        private string compradorNroIIBBField;
        
        private string compradorCodigoClienteField;
        
        private string compradorNroReferenciaField;
        
        private string compradorEmailField;
        
        private string nroRemitoField;
        
        private string alicuotaIVAField;
        
        private string tasaIIBBField;
        
        private string codigoJurisdiccionIIBBField;
        
        private string jurisdiccionImpuestosMunicipalesField;
        
        private string importeMonedaFacturacionField;
        
        private string importeMonedaFacturacionComprobanteBField;
        
        private string importeNoGravadoMonedaFacturacionField;
        
        private string importeGravadoMonedaFacturacionField;
        
        private string importeImpuestoLiquidadoMonedaFacturacionField;
        
        private string importeRNI_PercepcionMonedaFacturacionField;
        
        private string importeExentoMonedaFacturacionField;
        
        private string importePercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField;
        
        private string importePercepcionIIBBMonedaFacturacionField;
        
        private string importePercepcionImpuestosMunicipalesMonedaFacturacionField;
        
        private string importeImpuestosInternosMonedaFacturacionField;
        
        private string importeEscritoField;
        
        private string tasaCambioField;
        
        private string codigoMonedaField;
        
        private string cantidadRegistrosDetalleField;
        
        private string codigoMecanismoDistribucionField;
        
        private string tipoExportacionField;
        
        private string permisoExistenteField;
        
        private string formaPagoDescripcionField;
        
        private string incoTermsField;
        
        private string idiomaField;
        
        private string observaciones1Field;
        
        private string observaciones2Field;
        
        private string observaciones3Field;
        
        private string rapiPagoField;
        
        private string observacionRapiPagoField;
        
        private string pagoFacilField;
        
        private string oPERField;
        
        private string nOPERField;
        
        private string dAGRUFField;
        
        private string fACTORIField;
        
        private string fACTORI_FORMATEADOField;
        
        private string uSUARIOField;
        
        private string fECPG1_FORMATEADOField;
        
        private string fECPG2_FORMATEADOField;
        
        private string cUOTAIVA105Field;
        
        private string cUOTAIVA21Field;
        
        private RequestLine[] requestLinesField;
        
        private RequestAlicuota[] requestAlicuotasField;
        
        private RequestTributo[] requestTributosField;
        
        /// <remarks/>
        public string SQLID {
            get {
                return this.sQLIDField;
            }
            set {
                this.sQLIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmpresaID {
            get {
                return this.empresaIDField;
            }
            set {
                this.empresaIDField = value;
            }
        }
        
        /// <remarks/>
        public string TipoTransaccion {
            get {
                return this.tipoTransaccionField;
            }
            set {
                this.tipoTransaccionField = value;
            }
        }
        
        /// <remarks/>
        public string FechaComprobante {
            get {
                return this.fechaComprobanteField;
            }
            set {
                this.fechaComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string FechaDesdeServicioFacturado {
            get {
                return this.fechaDesdeServicioFacturadoField;
            }
            set {
                this.fechaDesdeServicioFacturadoField = value;
            }
        }
        
        /// <remarks/>
        public string FechaHastaServicioFacturado {
            get {
                return this.fechaHastaServicioFacturadoField;
            }
            set {
                this.fechaHastaServicioFacturadoField = value;
            }
        }
        
        /// <remarks/>
        public string TipoComprobante {
            get {
                return this.tipoComprobanteField;
            }
            set {
                this.tipoComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string NroComprobanteDesde {
            get {
                return this.nroComprobanteDesdeField;
            }
            set {
                this.nroComprobanteDesdeField = value;
            }
        }
        
        /// <remarks/>
        public string NroComprobanteHasta {
            get {
                return this.nroComprobanteHastaField;
            }
            set {
                this.nroComprobanteHastaField = value;
            }
        }
        
        /// <remarks/>
        public string FechaVencimientoPago {
            get {
                return this.fechaVencimientoPagoField;
            }
            set {
                this.fechaVencimientoPagoField = value;
            }
        }
        
        /// <remarks/>
        public string Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteComprobanteB {
            get {
                return this.importeComprobanteBField;
            }
            set {
                this.importeComprobanteBField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteNoGravado {
            get {
                return this.importeNoGravadoField;
            }
            set {
                this.importeNoGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteGravado {
            get {
                return this.importeGravadoField;
            }
            set {
                this.importeGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteImpuestoLiquidado {
            get {
                return this.importeImpuestoLiquidadoField;
            }
            set {
                this.importeImpuestoLiquidadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteRNI_Percepcion {
            get {
                return this.importeRNI_PercepcionField;
            }
            set {
                this.importeRNI_PercepcionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteExento {
            get {
                return this.importeExentoField;
            }
            set {
                this.importeExentoField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepciones_PagosCuentaImpuestosNacionales {
            get {
                return this.importePercepciones_PagosCuentaImpuestosNacionalesField;
            }
            set {
                this.importePercepciones_PagosCuentaImpuestosNacionalesField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepcionIIBB {
            get {
                return this.importePercepcionIIBBField;
            }
            set {
                this.importePercepcionIIBBField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepcionImpuestosMunicipales {
            get {
                return this.importePercepcionImpuestosMunicipalesField;
            }
            set {
                this.importePercepcionImpuestosMunicipalesField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteImpuestosInternos {
            get {
                return this.importeImpuestosInternosField;
            }
            set {
                this.importeImpuestosInternosField = value;
            }
        }
        
        /// <remarks/>
        public string CantidadAlicuotasIVA {
            get {
                return this.cantidadAlicuotasIVAField;
            }
            set {
                this.cantidadAlicuotasIVAField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoOperacion {
            get {
                return this.codigoOperacionField;
            }
            set {
                this.codigoOperacionField = value;
            }
        }
        
        /// <remarks/>
        public string LetraComprobante {
            get {
                return this.letraComprobanteField;
            }
            set {
                this.letraComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string NroInternoERP {
            get {
                return this.nroInternoERPField;
            }
            set {
                this.nroInternoERPField = value;
            }
        }
        
        /// <remarks/>
        public string CondicionPago {
            get {
                return this.condicionPagoField;
            }
            set {
                this.condicionPagoField = value;
            }
        }
        
        /// <remarks/>
        public string OficinaVentas {
            get {
                return this.oficinaVentasField;
            }
            set {
                this.oficinaVentasField = value;
            }
        }
        
        /// <remarks/>
        public string PuntoVenta {
            get {
                return this.puntoVentaField;
            }
            set {
                this.puntoVentaField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorRazonSocial {
            get {
                return this.emisorRazonSocialField;
            }
            set {
                this.emisorRazonSocialField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorDireccion {
            get {
                return this.emisorDireccionField;
            }
            set {
                this.emisorDireccionField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorCalle {
            get {
                return this.emisorCalleField;
            }
            set {
                this.emisorCalleField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorCP {
            get {
                return this.emisorCPField;
            }
            set {
                this.emisorCPField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorLocalidad {
            get {
                return this.emisorLocalidadField;
            }
            set {
                this.emisorLocalidadField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorProvincia {
            get {
                return this.emisorProvinciaField;
            }
            set {
                this.emisorProvinciaField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorPais {
            get {
                return this.emisorPaisField;
            }
            set {
                this.emisorPaisField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorTelefonos {
            get {
                return this.emisorTelefonosField;
            }
            set {
                this.emisorTelefonosField = value;
            }
        }
        
        /// <remarks/>
        public string EmisorEMail {
            get {
                return this.emisorEMailField;
            }
            set {
                this.emisorEMailField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorCodigoDocumento {
            get {
                return this.compradorCodigoDocumentoField;
            }
            set {
                this.compradorCodigoDocumentoField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorNroDocumento {
            get {
                return this.compradorNroDocumentoField;
            }
            set {
                this.compradorNroDocumentoField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorRazonSocial {
            get {
                return this.compradorRazonSocialField;
            }
            set {
                this.compradorRazonSocialField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorTipoResponsable {
            get {
                return this.compradorTipoResponsableField;
            }
            set {
                this.compradorTipoResponsableField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorTipoResponsableDescripcion {
            get {
                return this.compradorTipoResponsableDescripcionField;
            }
            set {
                this.compradorTipoResponsableDescripcionField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorDireccion {
            get {
                return this.compradorDireccionField;
            }
            set {
                this.compradorDireccionField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorLocalidad {
            get {
                return this.compradorLocalidadField;
            }
            set {
                this.compradorLocalidadField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorProvincia {
            get {
                return this.compradorProvinciaField;
            }
            set {
                this.compradorProvinciaField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorPais {
            get {
                return this.compradorPaisField;
            }
            set {
                this.compradorPaisField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorCodigoPostal {
            get {
                return this.compradorCodigoPostalField;
            }
            set {
                this.compradorCodigoPostalField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorNroIIBB {
            get {
                return this.compradorNroIIBBField;
            }
            set {
                this.compradorNroIIBBField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorCodigoCliente {
            get {
                return this.compradorCodigoClienteField;
            }
            set {
                this.compradorCodigoClienteField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorNroReferencia {
            get {
                return this.compradorNroReferenciaField;
            }
            set {
                this.compradorNroReferenciaField = value;
            }
        }
        
        /// <remarks/>
        public string CompradorEmail {
            get {
                return this.compradorEmailField;
            }
            set {
                this.compradorEmailField = value;
            }
        }
        
        /// <remarks/>
        public string NroRemito {
            get {
                return this.nroRemitoField;
            }
            set {
                this.nroRemitoField = value;
            }
        }
        
        /// <remarks/>
        public string AlicuotaIVA {
            get {
                return this.alicuotaIVAField;
            }
            set {
                this.alicuotaIVAField = value;
            }
        }
        
        /// <remarks/>
        public string TasaIIBB {
            get {
                return this.tasaIIBBField;
            }
            set {
                this.tasaIIBBField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoJurisdiccionIIBB {
            get {
                return this.codigoJurisdiccionIIBBField;
            }
            set {
                this.codigoJurisdiccionIIBBField = value;
            }
        }
        
        /// <remarks/>
        public string JurisdiccionImpuestosMunicipales {
            get {
                return this.jurisdiccionImpuestosMunicipalesField;
            }
            set {
                this.jurisdiccionImpuestosMunicipalesField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteMonedaFacturacion {
            get {
                return this.importeMonedaFacturacionField;
            }
            set {
                this.importeMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteMonedaFacturacionComprobanteB {
            get {
                return this.importeMonedaFacturacionComprobanteBField;
            }
            set {
                this.importeMonedaFacturacionComprobanteBField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteNoGravadoMonedaFacturacion {
            get {
                return this.importeNoGravadoMonedaFacturacionField;
            }
            set {
                this.importeNoGravadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteGravadoMonedaFacturacion {
            get {
                return this.importeGravadoMonedaFacturacionField;
            }
            set {
                this.importeGravadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteImpuestoLiquidadoMonedaFacturacion {
            get {
                return this.importeImpuestoLiquidadoMonedaFacturacionField;
            }
            set {
                this.importeImpuestoLiquidadoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteRNI_PercepcionMonedaFacturacion {
            get {
                return this.importeRNI_PercepcionMonedaFacturacionField;
            }
            set {
                this.importeRNI_PercepcionMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteExentoMonedaFacturacion {
            get {
                return this.importeExentoMonedaFacturacionField;
            }
            set {
                this.importeExentoMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacion {
            get {
                return this.importePercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField;
            }
            set {
                this.importePercepciones_PagosCuentaImpuestosNacionalesMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepcionIIBBMonedaFacturacion {
            get {
                return this.importePercepcionIIBBMonedaFacturacionField;
            }
            set {
                this.importePercepcionIIBBMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePercepcionImpuestosMunicipalesMonedaFacturacion {
            get {
                return this.importePercepcionImpuestosMunicipalesMonedaFacturacionField;
            }
            set {
                this.importePercepcionImpuestosMunicipalesMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteImpuestosInternosMonedaFacturacion {
            get {
                return this.importeImpuestosInternosMonedaFacturacionField;
            }
            set {
                this.importeImpuestosInternosMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteEscrito {
            get {
                return this.importeEscritoField;
            }
            set {
                this.importeEscritoField = value;
            }
        }
        
        /// <remarks/>
        public string TasaCambio {
            get {
                return this.tasaCambioField;
            }
            set {
                this.tasaCambioField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoMoneda {
            get {
                return this.codigoMonedaField;
            }
            set {
                this.codigoMonedaField = value;
            }
        }
        
        /// <remarks/>
        public string CantidadRegistrosDetalle {
            get {
                return this.cantidadRegistrosDetalleField;
            }
            set {
                this.cantidadRegistrosDetalleField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoMecanismoDistribucion {
            get {
                return this.codigoMecanismoDistribucionField;
            }
            set {
                this.codigoMecanismoDistribucionField = value;
            }
        }
        
        /// <remarks/>
        public string TipoExportacion {
            get {
                return this.tipoExportacionField;
            }
            set {
                this.tipoExportacionField = value;
            }
        }
        
        /// <remarks/>
        public string PermisoExistente {
            get {
                return this.permisoExistenteField;
            }
            set {
                this.permisoExistenteField = value;
            }
        }
        
        /// <remarks/>
        public string FormaPagoDescripcion {
            get {
                return this.formaPagoDescripcionField;
            }
            set {
                this.formaPagoDescripcionField = value;
            }
        }
        
        /// <remarks/>
        public string IncoTerms {
            get {
                return this.incoTermsField;
            }
            set {
                this.incoTermsField = value;
            }
        }
        
        /// <remarks/>
        public string Idioma {
            get {
                return this.idiomaField;
            }
            set {
                this.idiomaField = value;
            }
        }
        
        /// <remarks/>
        public string Observaciones1 {
            get {
                return this.observaciones1Field;
            }
            set {
                this.observaciones1Field = value;
            }
        }
        
        /// <remarks/>
        public string Observaciones2 {
            get {
                return this.observaciones2Field;
            }
            set {
                this.observaciones2Field = value;
            }
        }
        
        /// <remarks/>
        public string Observaciones3 {
            get {
                return this.observaciones3Field;
            }
            set {
                this.observaciones3Field = value;
            }
        }
        
        /// <remarks/>
        public string RapiPago {
            get {
                return this.rapiPagoField;
            }
            set {
                this.rapiPagoField = value;
            }
        }
        
        /// <remarks/>
        public string ObservacionRapiPago {
            get {
                return this.observacionRapiPagoField;
            }
            set {
                this.observacionRapiPagoField = value;
            }
        }
        
        /// <remarks/>
        public string PagoFacil {
            get {
                return this.pagoFacilField;
            }
            set {
                this.pagoFacilField = value;
            }
        }
        
        /// <remarks/>
        public string OPER {
            get {
                return this.oPERField;
            }
            set {
                this.oPERField = value;
            }
        }
        
        /// <remarks/>
        public string NOPER {
            get {
                return this.nOPERField;
            }
            set {
                this.nOPERField = value;
            }
        }
        
        /// <remarks/>
        public string DAGRUF {
            get {
                return this.dAGRUFField;
            }
            set {
                this.dAGRUFField = value;
            }
        }
        
        /// <remarks/>
        public string FACTORI {
            get {
                return this.fACTORIField;
            }
            set {
                this.fACTORIField = value;
            }
        }
        
        /// <remarks/>
        public string FACTORI_FORMATEADO {
            get {
                return this.fACTORI_FORMATEADOField;
            }
            set {
                this.fACTORI_FORMATEADOField = value;
            }
        }
        
        /// <remarks/>
        public string USUARIO {
            get {
                return this.uSUARIOField;
            }
            set {
                this.uSUARIOField = value;
            }
        }
        
        /// <remarks/>
        public string FECPG1_FORMATEADO {
            get {
                return this.fECPG1_FORMATEADOField;
            }
            set {
                this.fECPG1_FORMATEADOField = value;
            }
        }
        
        /// <remarks/>
        public string FECPG2_FORMATEADO {
            get {
                return this.fECPG2_FORMATEADOField;
            }
            set {
                this.fECPG2_FORMATEADOField = value;
            }
        }
        
        /// <remarks/>
        public string CUOTAIVA105 {
            get {
                return this.cUOTAIVA105Field;
            }
            set {
                this.cUOTAIVA105Field = value;
            }
        }
        
        /// <remarks/>
        public string CUOTAIVA21 {
            get {
                return this.cUOTAIVA21Field;
            }
            set {
                this.cUOTAIVA21Field = value;
            }
        }
        
        /// <remarks/>
        public RequestLine[] RequestLines {
            get {
                return this.requestLinesField;
            }
            set {
                this.requestLinesField = value;
            }
        }
        
        /// <remarks/>
        public RequestAlicuota[] RequestAlicuotas {
            get {
                return this.requestAlicuotasField;
            }
            set {
                this.requestAlicuotasField = value;
            }
        }
        
        /// <remarks/>
        public RequestTributo[] RequestTributos {
            get {
                return this.requestTributosField;
            }
            set {
                this.requestTributosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class RequestLine {
        
        private string sQLIDField;
        
        private string codigoProductoEmpresaField;
        
        private string codigoProductoNCMField;
        
        private string codigoProductoSecretariaField;
        
        private string descripcionField;
        
        private string cantidadField;
        
        private string unidadMedidaField;
        
        private string importePrecioUnitarioField;
        
        private string importeBonificacionField;
        
        private string importeAjusteField;
        
        private string importeSubtotalField;
        
        private string importePrecioUnitarioMonedaFacturacionField;
        
        private string importeBonificacionMonedaFacturacionField;
        
        private string importeAjusteMonedaFacturacionField;
        
        private string importeSubtotalMonedaFacturacionField;
        
        private string importeSubtotalMonedaFacturacionConIVAField;
        
        private string alicuotaIVAField;
        
        private string indicadorExentoGravadoNoGravadoField;
        
        private string observacionesField;
        
        private string mesPrestacionField;
        
        /// <remarks/>
        public string SQLID {
            get {
                return this.sQLIDField;
            }
            set {
                this.sQLIDField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoProductoEmpresa {
            get {
                return this.codigoProductoEmpresaField;
            }
            set {
                this.codigoProductoEmpresaField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoProductoNCM {
            get {
                return this.codigoProductoNCMField;
            }
            set {
                this.codigoProductoNCMField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoProductoSecretaria {
            get {
                return this.codigoProductoSecretariaField;
            }
            set {
                this.codigoProductoSecretariaField = value;
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
            }
        }
        
        /// <remarks/>
        public string Cantidad {
            get {
                return this.cantidadField;
            }
            set {
                this.cantidadField = value;
            }
        }
        
        /// <remarks/>
        public string UnidadMedida {
            get {
                return this.unidadMedidaField;
            }
            set {
                this.unidadMedidaField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePrecioUnitario {
            get {
                return this.importePrecioUnitarioField;
            }
            set {
                this.importePrecioUnitarioField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteBonificacion {
            get {
                return this.importeBonificacionField;
            }
            set {
                this.importeBonificacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteAjuste {
            get {
                return this.importeAjusteField;
            }
            set {
                this.importeAjusteField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteSubtotal {
            get {
                return this.importeSubtotalField;
            }
            set {
                this.importeSubtotalField = value;
            }
        }
        
        /// <remarks/>
        public string ImportePrecioUnitarioMonedaFacturacion {
            get {
                return this.importePrecioUnitarioMonedaFacturacionField;
            }
            set {
                this.importePrecioUnitarioMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteBonificacionMonedaFacturacion {
            get {
                return this.importeBonificacionMonedaFacturacionField;
            }
            set {
                this.importeBonificacionMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteAjusteMonedaFacturacion {
            get {
                return this.importeAjusteMonedaFacturacionField;
            }
            set {
                this.importeAjusteMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteSubtotalMonedaFacturacion {
            get {
                return this.importeSubtotalMonedaFacturacionField;
            }
            set {
                this.importeSubtotalMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteSubtotalMonedaFacturacionConIVA {
            get {
                return this.importeSubtotalMonedaFacturacionConIVAField;
            }
            set {
                this.importeSubtotalMonedaFacturacionConIVAField = value;
            }
        }
        
        /// <remarks/>
        public string AlicuotaIVA {
            get {
                return this.alicuotaIVAField;
            }
            set {
                this.alicuotaIVAField = value;
            }
        }
        
        /// <remarks/>
        public string IndicadorExentoGravadoNoGravado {
            get {
                return this.indicadorExentoGravadoNoGravadoField;
            }
            set {
                this.indicadorExentoGravadoNoGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string Observaciones {
            get {
                return this.observacionesField;
            }
            set {
                this.observacionesField = value;
            }
        }
        
        /// <remarks/>
        public string MesPrestacion {
            get {
                return this.mesPrestacionField;
            }
            set {
                this.mesPrestacionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class ResponseHeaderObs {
        
        private string codigoField;
        
        private string msgField;
        
        /// <remarks/>
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class ResponseHeader {
        
        private string sQLIDField;
        
        private string tipoTransaccionField;
        
        private string comprobanteField;
        
        private string codigoDocumentoCompradorField;
        
        private string nroDocumentoCompradorField;
        
        private string tipoComprobanteField;
        
        private string puntoVentaField;
        
        private string letraComprobanteField;
        
        private string nroComprobanteDesdeField;
        
        private string nroComprobanteHastaField;
        
        private string importeField;
        
        private string importeNoGravadoField;
        
        private string importeGravadoField;
        
        private string importeImpuestoLiquidadoField;
        
        private string importeRNI_PercepcionField;
        
        private string importeExentoField;
        
        private string resultadoField;
        
        private string cAEField;
        
        private string fechaComprobanteField;
        
        private string fechaVencimientoField;
        
        private string motivoField;
        
        private string motivoDescripcionField;
        
        private string fechaDesdeServicioFacturadoField;
        
        private string fechaHastaServicioFacturadoField;
        
        private string fechaVencimientoPagoField;
        
        private string ultimoIDUsadoField;
        
        private string ultimoNroComprobanteUsadoField;
        
        private string nroInternoERPField;
        
        private ResponseHeaderObs[] observacionesField;
        
        /// <remarks/>
        public string SQLID {
            get {
                return this.sQLIDField;
            }
            set {
                this.sQLIDField = value;
            }
        }
        
        /// <remarks/>
        public string TipoTransaccion {
            get {
                return this.tipoTransaccionField;
            }
            set {
                this.tipoTransaccionField = value;
            }
        }
        
        /// <remarks/>
        public string Comprobante {
            get {
                return this.comprobanteField;
            }
            set {
                this.comprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoDocumentoComprador {
            get {
                return this.codigoDocumentoCompradorField;
            }
            set {
                this.codigoDocumentoCompradorField = value;
            }
        }
        
        /// <remarks/>
        public string NroDocumentoComprador {
            get {
                return this.nroDocumentoCompradorField;
            }
            set {
                this.nroDocumentoCompradorField = value;
            }
        }
        
        /// <remarks/>
        public string TipoComprobante {
            get {
                return this.tipoComprobanteField;
            }
            set {
                this.tipoComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string PuntoVenta {
            get {
                return this.puntoVentaField;
            }
            set {
                this.puntoVentaField = value;
            }
        }
        
        /// <remarks/>
        public string LetraComprobante {
            get {
                return this.letraComprobanteField;
            }
            set {
                this.letraComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string NroComprobanteDesde {
            get {
                return this.nroComprobanteDesdeField;
            }
            set {
                this.nroComprobanteDesdeField = value;
            }
        }
        
        /// <remarks/>
        public string NroComprobanteHasta {
            get {
                return this.nroComprobanteHastaField;
            }
            set {
                this.nroComprobanteHastaField = value;
            }
        }
        
        /// <remarks/>
        public string Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteNoGravado {
            get {
                return this.importeNoGravadoField;
            }
            set {
                this.importeNoGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteGravado {
            get {
                return this.importeGravadoField;
            }
            set {
                this.importeGravadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteImpuestoLiquidado {
            get {
                return this.importeImpuestoLiquidadoField;
            }
            set {
                this.importeImpuestoLiquidadoField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteRNI_Percepcion {
            get {
                return this.importeRNI_PercepcionField;
            }
            set {
                this.importeRNI_PercepcionField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteExento {
            get {
                return this.importeExentoField;
            }
            set {
                this.importeExentoField = value;
            }
        }
        
        /// <remarks/>
        public string Resultado {
            get {
                return this.resultadoField;
            }
            set {
                this.resultadoField = value;
            }
        }
        
        /// <remarks/>
        public string CAE {
            get {
                return this.cAEField;
            }
            set {
                this.cAEField = value;
            }
        }
        
        /// <remarks/>
        public string FechaComprobante {
            get {
                return this.fechaComprobanteField;
            }
            set {
                this.fechaComprobanteField = value;
            }
        }
        
        /// <remarks/>
        public string FechaVencimiento {
            get {
                return this.fechaVencimientoField;
            }
            set {
                this.fechaVencimientoField = value;
            }
        }
        
        /// <remarks/>
        public string Motivo {
            get {
                return this.motivoField;
            }
            set {
                this.motivoField = value;
            }
        }
        
        /// <remarks/>
        public string MotivoDescripcion {
            get {
                return this.motivoDescripcionField;
            }
            set {
                this.motivoDescripcionField = value;
            }
        }
        
        /// <remarks/>
        public string FechaDesdeServicioFacturado {
            get {
                return this.fechaDesdeServicioFacturadoField;
            }
            set {
                this.fechaDesdeServicioFacturadoField = value;
            }
        }
        
        /// <remarks/>
        public string FechaHastaServicioFacturado {
            get {
                return this.fechaHastaServicioFacturadoField;
            }
            set {
                this.fechaHastaServicioFacturadoField = value;
            }
        }
        
        /// <remarks/>
        public string FechaVencimientoPago {
            get {
                return this.fechaVencimientoPagoField;
            }
            set {
                this.fechaVencimientoPagoField = value;
            }
        }
        
        /// <remarks/>
        public string UltimoIDUsado {
            get {
                return this.ultimoIDUsadoField;
            }
            set {
                this.ultimoIDUsadoField = value;
            }
        }
        
        /// <remarks/>
        public string UltimoNroComprobanteUsado {
            get {
                return this.ultimoNroComprobanteUsadoField;
            }
            set {
                this.ultimoNroComprobanteUsadoField = value;
            }
        }
        
        /// <remarks/>
        public string NroInternoERP {
            get {
                return this.nroInternoERPField;
            }
            set {
                this.nroInternoERPField = value;
            }
        }
        
        /// <remarks/>
        public ResponseHeaderObs[] Observaciones {
            get {
                return this.observacionesField;
            }
            set {
                this.observacionesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class ResponseBatch {
        
        private string batchUniqueIdField;
        
        private string cUITInformanteField;
        
        private string fechaCAEField;
        
        private string cantidadComprobantesField;
        
        private string resultadoField;
        
        private string motivoField;
        
        private string motivoDescripcionField;
        
        private string reprocesoField;
        
        private string sonServiciosField;
        
        private string codigoErrorField;
        
        private string mensajeErrorField;
        
        private ResponseHeader[] responseHeadersField;
        
        /// <remarks/>
        public string BatchUniqueId {
            get {
                return this.batchUniqueIdField;
            }
            set {
                this.batchUniqueIdField = value;
            }
        }
        
        /// <remarks/>
        public string CUITInformante {
            get {
                return this.cUITInformanteField;
            }
            set {
                this.cUITInformanteField = value;
            }
        }
        
        /// <remarks/>
        public string FechaCAE {
            get {
                return this.fechaCAEField;
            }
            set {
                this.fechaCAEField = value;
            }
        }
        
        /// <remarks/>
        public string CantidadComprobantes {
            get {
                return this.cantidadComprobantesField;
            }
            set {
                this.cantidadComprobantesField = value;
            }
        }
        
        /// <remarks/>
        public string Resultado {
            get {
                return this.resultadoField;
            }
            set {
                this.resultadoField = value;
            }
        }
        
        /// <remarks/>
        public string Motivo {
            get {
                return this.motivoField;
            }
            set {
                this.motivoField = value;
            }
        }
        
        /// <remarks/>
        public string MotivoDescripcion {
            get {
                return this.motivoDescripcionField;
            }
            set {
                this.motivoDescripcionField = value;
            }
        }
        
        /// <remarks/>
        public string Reproceso {
            get {
                return this.reprocesoField;
            }
            set {
                this.reprocesoField = value;
            }
        }
        
        /// <remarks/>
        public string SonServicios {
            get {
                return this.sonServiciosField;
            }
            set {
                this.sonServiciosField = value;
            }
        }
        
        /// <remarks/>
        public string CodigoError {
            get {
                return this.codigoErrorField;
            }
            set {
                this.codigoErrorField = value;
            }
        }
        
        /// <remarks/>
        public string MensajeError {
            get {
                return this.mensajeErrorField;
            }
            set {
                this.mensajeErrorField = value;
            }
        }
        
        /// <remarks/>
        public ResponseHeader[] ResponseHeaders {
            get {
                return this.responseHeadersField;
            }
            set {
                this.responseHeadersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class RequestTributo {
        
        private string impuestoIDField;
        
        private string cbteIDField;
        
        private string idField;
        
        private string alicField;
        
        private string tipoField;
        
        private string baseImpField;
        
        private string importeField;
        
        private string importeMonedaFacturacionField;
        
        private string descripcionField;
        
        private string codigoField;
        
        /// <remarks/>
        public string ImpuestoID {
            get {
                return this.impuestoIDField;
            }
            set {
                this.impuestoIDField = value;
            }
        }
        
        /// <remarks/>
        public string CbteID {
            get {
                return this.cbteIDField;
            }
            set {
                this.cbteIDField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Alic {
            get {
                return this.alicField;
            }
            set {
                this.alicField = value;
            }
        }
        
        /// <remarks/>
        public string Tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public string BaseImp {
            get {
                return this.baseImpField;
            }
            set {
                this.baseImpField = value;
            }
        }
        
        /// <remarks/>
        public string Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteMonedaFacturacion {
            get {
                return this.importeMonedaFacturacionField;
            }
            set {
                this.importeMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
            }
        }
        
        /// <remarks/>
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://accendo.com.ar/")]
    public partial class RequestAlicuota {
        
        private string impuestoIDField;
        
        private string cbteIDField;
        
        private string idField;
        
        private string tipoField;
        
        private string baseImpField;
        
        private string importeField;
        
        private string importeMonedaFacturacionField;
        
        private string descripcionField;
        
        private string codigoField;
        
        /// <remarks/>
        public string ImpuestoID {
            get {
                return this.impuestoIDField;
            }
            set {
                this.impuestoIDField = value;
            }
        }
        
        /// <remarks/>
        public string CbteID {
            get {
                return this.cbteIDField;
            }
            set {
                this.cbteIDField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public string BaseImp {
            get {
                return this.baseImpField;
            }
            set {
                this.baseImpField = value;
            }
        }
        
        /// <remarks/>
        public string Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
        
        /// <remarks/>
        public string ImporteMonedaFacturacion {
            get {
                return this.importeMonedaFacturacionField;
            }
            set {
                this.importeMonedaFacturacionField = value;
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
            }
        }
        
        /// <remarks/>
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestProcesarLoteFacturasCompletedEventHandler(object sender, TestProcesarLoteFacturasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestProcesarLoteFacturasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestProcesarLoteFacturasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcesarLoteFacturasBienesServiciosObjCompletedEventHandler(object sender, ProcesarLoteFacturasBienesServiciosObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcesarLoteFacturasBienesServiciosObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcesarLoteFacturasBienesServiciosObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseBatch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseBatch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcesarLoteFacturasExportacionObjCompletedEventHandler(object sender, ProcesarLoteFacturasExportacionObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcesarLoteFacturasExportacionObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcesarLoteFacturasExportacionObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseBatch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseBatch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcesarLoteFacturasBienesServiciosCompletedEventHandler(object sender, ProcesarLoteFacturasBienesServiciosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcesarLoteFacturasBienesServiciosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcesarLoteFacturasBienesServiciosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcesarLoteFacturasExportacionCompletedEventHandler(object sender, ProcesarLoteFacturasExportacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcesarLoteFacturasExportacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcesarLoteFacturasExportacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcesarLoteFacturasBienesCapitalCompletedEventHandler(object sender, ProcesarLoteFacturasBienesCapitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcesarLoteFacturasBienesCapitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcesarLoteFacturasBienesCapitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReprocesarLoteFacturasBienesServiciosCompletedEventHandler(object sender, ReprocesarLoteFacturasBienesServiciosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReprocesarLoteFacturasBienesServiciosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReprocesarLoteFacturasBienesServiciosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReprocesarLoteFacturasExportacionCompletedEventHandler(object sender, ReprocesarLoteFacturasExportacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReprocesarLoteFacturasExportacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReprocesarLoteFacturasExportacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReprocesarLoteFacturasBienesCapitalCompletedEventHandler(object sender, ReprocesarLoteFacturasBienesCapitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReprocesarLoteFacturasBienesCapitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReprocesarLoteFacturasBienesCapitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591